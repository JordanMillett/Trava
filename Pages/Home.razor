@page "/home"
@using Trava.Repositories
@inject TranslationService Translation
@inject MorphologyService Morphology

<h1>Home</h1>

<Button Color="ButtonColor.Primary" class="btn" @onclick="Process">Process Text</Button>
<br><br>

<div class="row">
    <div class="col-6">
        <textarea @bind="Input"></textarea>
    </div>
    <div class="col-6">
        <textarea readonly @bind="Output"></textarea>
    </div>
</div>

<style>
    textarea
    {
    resize: none;
    min-width: 100%;
    height: 500px;
    }
</style>

@code 
{
    string Input = "";
    string Output = "";

    List<string> InputTokens;
    List<string> OutputTokens;

    protected override async Task OnInitializedAsync()
    {
        await Morphology.TryStartPython();
    }

    public void Process()
    {   
        InputTokens = Regex.Matches(Input, @"\w+|[^\w\s]+|\s+")
                    .Cast<Match>()
                    .Select(m => m.Value)
                    .ToList();

        OutputTokens = [];
            
        foreach (string token in InputTokens)
        {
            if (Regex.IsMatch(token, @"^\w+$"))  // If token is a word
            {
                var lemma = Morphology.Lemmatize(token);
                var translation = Translation.Repository.GetTranslation(lemma) ?? token;
                OutputTokens.Add(translation);
            }
            else
            {
                // Punctuation or whitespace - keep as is
                OutputTokens.Add(token);
            }
        }

        Output = string.Concat(OutputTokens);
    }
}

